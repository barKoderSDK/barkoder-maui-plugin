#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef BARKODERFRAMEWORKPROXY_SWIFT_H
#define BARKODERFRAMEWORKPROXY_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Barkoder;
@import BarkoderSDK;
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BarkoderFrameworkProxy",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class UIColor;
@class DecoderConfig;

SWIFT_CLASS_NAMED("BKDConfig")
@interface BarkoderConfig : NSObject
- (nonnull instancetype)initWithLicenseKey:(NSString * _Nonnull)licenseKey OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) BOOL closeSessionOnResultEnabled;
@property (nonatomic) BOOL ARContinueScanningOnLimit;
@property (nonatomic) BOOL vibrateOnSuccessEnabled;
@property (nonatomic) BOOL beepOnSuccessEnabled;
@property (nonatomic) BOOL scanningIndicatorAlwaysVisible;
@property (nonatomic) BOOL pinchToZoomEnabled;
@property (nonatomic) BOOL locationInPreviewEnabled;
@property (nonatomic, strong) UIColor * _Nonnull roiLineColor;
@property (nonatomic, strong) UIColor * _Nonnull scanningIndicatorColor;
@property (nonatomic) float roiLineWidth;
@property (nonatomic) float scanningIndicatorWidth;
@property (nonatomic, strong) UIColor * _Nonnull roiOverlayBackgroundColor;
@property (nonatomic) BOOL regionOfInterestVisible;
@property (nonatomic, strong) UIColor * _Nonnull locationLineColor;
@property (nonatomic) float locationLineWidth;
@property (nonatomic) BOOL imageResultEnabled;
@property (nonatomic) BOOL locationInImageResultEnabled;
@property (nonatomic) NSInteger thresholdBetweenDuplicatesScans;
@property (nonatomic) NSInteger scanningIndicatorAnimationMode;
@property (nonatomic, strong) DecoderConfig * _Nullable decoderConfig;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SymbologyConfig;
@class DatamatrixConfig;

SWIFT_CLASS_NAMED("BKDDecoderConfig")
@interface DecoderConfig : NSObject
@property (nonatomic) BOOL enableMisshaped1D;
@property (nonatomic) NSInteger enableComposite;
@property (nonatomic) BOOL upcEanDeblur;
@property (nonatomic) BOOL enableVINRestrictions;
@property (nonatomic, strong) SymbologyConfig * _Nonnull aztec;
@property (nonatomic, strong) SymbologyConfig * _Nonnull aztecCompact;
@property (nonatomic, strong) DatamatrixConfig * _Nonnull qr;
@property (nonatomic, strong) DatamatrixConfig * _Nonnull qrMicro;
@property (nonatomic, strong) SymbologyConfig * _Nonnull code128;
@property (nonatomic, strong) SymbologyConfig * _Nonnull code93;
@property (nonatomic, strong) SymbologyConfig * _Nonnull code39;
@property (nonatomic, strong) SymbologyConfig * _Nonnull codabar;
@property (nonatomic, strong) SymbologyConfig * _Nonnull code11;
@property (nonatomic, strong) SymbologyConfig * _Nonnull msi;
@property (nonatomic, strong) SymbologyConfig * _Nonnull upcA;
@property (nonatomic, strong) SymbologyConfig * _Nonnull upcE;
@property (nonatomic, strong) SymbologyConfig * _Nonnull upcE1;
@property (nonatomic, strong) SymbologyConfig * _Nonnull ean8;
@property (nonatomic, strong) SymbologyConfig * _Nonnull ean13;
@property (nonatomic, strong) SymbologyConfig * _Nonnull postalIMB;
@property (nonatomic, strong) SymbologyConfig * _Nonnull postnet;
@property (nonatomic, strong) SymbologyConfig * _Nonnull planet;
@property (nonatomic, strong) SymbologyConfig * _Nonnull australianPost;
@property (nonatomic, strong) SymbologyConfig * _Nonnull royalMail;
@property (nonatomic, strong) SymbologyConfig * _Nonnull kix;
@property (nonatomic, strong) SymbologyConfig * _Nonnull japanesePost;
@property (nonatomic, strong) SymbologyConfig * _Nonnull pdf417;
@property (nonatomic, strong) SymbologyConfig * _Nonnull pdf417Micro;
@property (nonatomic, strong) DatamatrixConfig * _Nonnull datamatrix;
@property (nonatomic, strong) SymbologyConfig * _Nonnull code25;
@property (nonatomic, strong) SymbologyConfig * _Nonnull interleaved25;
@property (nonatomic, strong) SymbologyConfig * _Nonnull itf14;
@property (nonatomic, strong) SymbologyConfig * _Nonnull iata25;
@property (nonatomic, strong) SymbologyConfig * _Nonnull matrix25;
@property (nonatomic, strong) SymbologyConfig * _Nonnull datalogic25;
@property (nonatomic, strong) SymbologyConfig * _Nonnull coop25;
@property (nonatomic, strong) SymbologyConfig * _Nonnull code32;
@property (nonatomic, strong) SymbologyConfig * _Nonnull telepen;
@property (nonatomic, strong) SymbologyConfig * _Nonnull dotcode;
@property (nonatomic, strong) SymbologyConfig * _Nonnull maxicode;
@property (nonatomic, strong) SymbologyConfig * _Nonnull idDocument;
@property (nonatomic, strong) SymbologyConfig * _Nonnull databar14;
@property (nonatomic, strong) SymbologyConfig * _Nonnull databarLimited;
@property (nonatomic, strong) SymbologyConfig * _Nonnull databarExpanded;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setEnabledDecodersWithSymbologies:(NSArray<NSNumber *> * _Nonnull)symbologies;
@end


@class UIView;
@class Config;
@class DecoderPayload;
@class UIImage;

SWIFT_CLASS_NAMED("BarkoderProxy")
@interface BarkoderView : NSObject
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@property (nonatomic, strong) BarkoderConfig * _Nullable config;
@property (nonatomic, strong) Config * _Nullable decoderConfig;
- (void)startScanningWithCompletion:(void (^ _Nonnull)(DecoderPayload * _Nonnull))completion;
- (void)scanImageWithCompletion:(UIImage * _Nonnull)image bkdConfig:(BarkoderConfig * _Nonnull)config completion:(void (^ _Nonnull)(DecoderPayload * _Nonnull))completion;
- (void)startCamera;
- (void)stopScanning;
- (void)captureImage;
- (void)pauseScanning;
- (void)freezeScanning;
- (void)unfreezeScanning;
- (void)isFlashAvailableWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)setFlashEnabledWithArg:(BOOL)arg;
- (void)getMaxZoomFactorWithCompletion:(void (^ _Nonnull)(float))completion;
- (void)setZoomFactorWithArg:(float)arg;
- (void)setLocationLineWidthWithArg:(float)arg;
- (NSString * _Nonnull)getLocationLineColorHex SWIFT_WARN_UNUSED_RESULT;
- (void)setLocationLineColorWithArg:(NSString * _Nonnull)arg;
- (void)setARNonSelectedLocationLineColorWithArg:(NSString * _Nonnull)arg;
- (void)setARSelectedLocationLineColorWithArg:(NSString * _Nonnull)arg;
- (void)setARNonSelectedHeaderTextColorWithArg:(NSString * _Nonnull)arg;
- (void)setShowDuplicatesLocationWithArg:(BOOL)arg;
- (void)setARSelectedHeaderTextColorWithArg:(NSString * _Nonnull)arg;
- (void)setARSelectedLocationLineWidthWithArg:(float)arg;
- (void)setARNonSelectedLocationLineWidthWithArg:(float)arg;
- (void)setARHeaderMaxTextHeightWithArg:(float)arg;
- (void)setARHeaderMinTextHeightWithArg:(float)arg;
- (void)setARHeaderHeightWithArg:(float)arg;
- (void)setARHeaderVerticalTextMarginWithArg:(float)arg;
- (void)setARHeaderHorizontalTextMarginWithArg:(float)arg;
- (void)setARDoubleTapToFreezeEnabledWithArg:(BOOL)arg;
- (void)setResultDisappearanceDelayMsWithArg:(NSInteger)arg;
- (void)setARResultLimitWithArg:(NSInteger)arg;
- (void)setARLocationTransitionSpeedWithArg:(float)arg;
- (void)setARHeaderTextFormatWithArg:(NSString * _Nonnull)arg;
- (void)setRoiLineColorWithArg:(NSString * _Nonnull)arg;
- (void)setRoiLineWidthWithArg:(float)arg;
- (void)setRoiOverlayBackgroundColorWithArg:(NSString * _Nonnull)arg;
- (void)setCloseSessionOnResultEnabledWithArg:(BOOL)arg;
- (void)setARContinueScanningOnLimitWithArg:(BOOL)arg;
- (void)setAREmitResultsAtSessionEndOnlyWithArg:(BOOL)arg;
- (void)setImageResultEnabledWithArg:(BOOL)arg;
- (void)setLocationInImageResultEnabledWithArg:(BOOL)arg;
- (void)setThresholdBetweenDuplicatesScansWithArg:(NSInteger)arg;
- (void)setLocationInPreviewEnabledWithArg:(BOOL)arg;
- (void)setPinchToZoomEnabledWithArg:(BOOL)arg;
- (void)setRegionOfInterestVisibleWithArg:(BOOL)arg;
- (void)setRegionOfInterestWithLeft:(NSInteger)left top:(NSInteger)top width:(NSInteger)width height:(NSInteger)height;
- (void)setBeepOnSuccessEnabledWithArg:(BOOL)arg;
- (void)setVibrateOnSuccessEnabledWithArg:(BOOL)arg;
@property (nonatomic, readonly, copy) NSString * _Nonnull encodingCharacterSet;
@property (nonatomic, readonly) NSInteger decodingSpeed;
@property (nonatomic, readonly) NSInteger formattingType;
@property (nonatomic, readonly) NSInteger locationLineWidth;
- (NSString * _Nonnull)getRoiLineColorHex SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getARSelectedLocationLineColor SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getARNonSelectedLocationLineColor SWIFT_WARN_UNUSED_RESULT;
- (float)getARHeaderHeight SWIFT_WARN_UNUSED_RESULT;
- (float)getARSelectedLocationWidth SWIFT_WARN_UNUSED_RESULT;
- (float)getARNonSelectedLocationWidth SWIFT_WARN_UNUSED_RESULT;
- (enum BarkoderARMode)getARMode SWIFT_WARN_UNUSED_RESULT;
- (enum BarkoderARLocationType)getARLocationType SWIFT_WARN_UNUSED_RESULT;
- (enum BarkoderARHeaderShowMode)getARHeaderShowMode SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getResultDisappereanceDelayMs SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getARResultLimit SWIFT_WARN_UNUSED_RESULT;
- (float)getLocationTransitionSpeed SWIFT_WARN_UNUSED_RESULT;
- (enum BarkoderAROverlayRefresh)getAROverlayRefresh SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getARDoubleTapToFreeze SWIFT_WARN_UNUSED_RESULT;
- (float)getARHeaderMaxTextHeight SWIFT_WARN_UNUSED_RESULT;
- (float)getARHeaderMinTextHeight SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getARSelectedHeaderTextColor SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getARNonSelectedHeaderTextColor SWIFT_WARN_UNUSED_RESULT;
- (float)getARHeaderHorizontalTextMargin SWIFT_WARN_UNUSED_RESULT;
- (float)getARHeaderVerticalTextMargin SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getARHeaderTextFormat SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getScanningIndicatorColorHex SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSInteger roiLineWidth;
@property (nonatomic, readonly) NSInteger scanningIndicatorWidth;
- (NSString * _Nonnull)getRoiOverlayBackgroundColorHex SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL closeSessionOnResultEnabled;
@property (nonatomic, readonly) BOOL aRContinueScanningOnLimit;
@property (nonatomic, readonly) BOOL aREmitResultsAtSessionEndOnly;
@property (nonatomic, readonly) BOOL imageResultEnabled;
@property (nonatomic, readonly) BOOL locationInImageResultEnabled;
- (NSArray<NSNumber *> * _Nonnull)getRegionOfInterest SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSInteger threadsLimit;
- (void)setThreadsLimitWithThreadsLimit:(NSInteger)threadsLimit;
@property (nonatomic, readonly) BOOL isLocationInPreviewEnabled;
@property (nonatomic, readonly) BOOL isPinchToZoomEnabled;
@property (nonatomic, readonly) BOOL isRegionOfInterestVisible;
@property (nonatomic, readonly) BOOL isBeepOnSuccessEnabled;
@property (nonatomic, readonly) BOOL isVibrateOnSuccessEnabled;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly) MsiChecksum msiChecksumType;
- (void)setMsiChecksumTypeWithArg:(MsiChecksum)arg;
@property (nonatomic, readonly) Code39Checksum code39ChecksumType;
- (void)setCode39ChecksumTypeWithArg:(Code39Checksum)arg;
@property (nonatomic, readonly) Code11Checksum code11ChecksumType;
- (void)setCode11ChecksumTypeWithArg:(Code11Checksum)arg;
- (void)setBarkoderResolutionWithArg:(NSInteger)arg;
- (void)setBarkoderARModeWithArg:(NSInteger)arg;
- (void)setBarkoderARLocationTypeWithArg:(NSInteger)arg;
- (void)setBarkoderARoverlayRefreshWithArg:(NSInteger)arg;
- (void)setBarkoderARHeaderShowModeWithArg:(NSInteger)arg;
@property (nonatomic, readonly) NSInteger barkoderARMode;
@property (nonatomic, readonly) NSInteger barkoderARLocationType;
@property (nonatomic, readonly) NSInteger barkoderARHeaderShowMode;
@property (nonatomic, readonly) NSInteger barkoderAROverlayRefresh;
@property (nonatomic, readonly) NSInteger barkoderResolution;
- (void)setCameraWithArg:(enum BarkoderCameraPosition)arg;
- (void)setDecodingSpeedWithArg:(NSInteger)arg;
- (void)setEncodingCharacterSetWithArg:(NSString * _Nonnull)arg;
- (void)setFormattingTypeWithArg:(NSInteger)arg;
- (void)setMaximumResultsCountWithArg:(NSInteger)arg;
- (void)setDynamicExposureWithArg:(NSInteger)arg;
- (void)setCentricFocusAndExposureWithArg:(BOOL)arg;
- (void)setUPCEexpandToUPCAWithArg:(BOOL)arg;
- (void)setUPCE1expandToUPCAWithArg:(BOOL)arg;
- (void)setVideoStabilizationWithArg:(BOOL)arg;
- (void)setDuplicatesDelayMsWithArg:(NSInteger)arg;
- (void)setMulticodeCachingDurationWithArg:(NSInteger)arg;
- (void)setMulticodeCachingEnabledWithArg:(BOOL)arg;
- (void)setIdDocumentMasterChecksumEnabledWithArg:(BOOL)arg;
- (void)setCustomOptionWithOption:(NSString * _Nonnull)option value:(int32_t)value;
- (void)setScanningIndicatorAnimationModeWithArg:(NSInteger)arg;
- (void)setEnableCompositeWithArg:(NSInteger)arg;
- (void)setScanningIndicatorColorHexWithArg:(NSString * _Nonnull)arg;
- (void)setScanningIndicatorWidthWithArg:(float)arg;
- (void)setScanningIndicatorAlwaysVisibleWithArg:(BOOL)arg;
- (void)setDatamatrixDpmModeEnabledWithArg:(BOOL)arg;
- (void)setQRDpmModeEnabledWithArg:(BOOL)arg;
- (void)setQRMicroDpmModeEnabledWithArg:(BOOL)arg;
- (void)setUpcEanDeblurEnabledWithArg:(BOOL)arg;
- (void)setEnableVINRestrictionsWithArg:(BOOL)arg;
- (void)setMisshaped1DEnabledWithArg:(BOOL)arg;
- (void)setBarcodeThumbnailOnResultEnabledWithArg:(BOOL)arg;
- (void)setARBarcodeThumbnailOnResultEnabledWithArg:(BOOL)arg;
- (void)setARImageResultEnabledWithArg:(BOOL)arg;
- (float)getCurrentZoomFactor SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL barcodeThumbnailOnResultEnabled;
@property (nonatomic, readonly) BOOL isARBarcodeThumbnailOnResultEnabled;
@property (nonatomic, readonly) BOOL isARImageResultEnabled;
@property (nonatomic, readonly) BOOL multicodeCachingEnabled;
@property (nonatomic, readonly) BOOL datamatrixDpmModeEnabled;
@property (nonatomic, readonly) BOOL idDocumentMasterChecksumEnabled;
@property (nonatomic, readonly) BOOL qrDpmModeEnabled;
@property (nonatomic, readonly) BOOL qrMicroDpmModeEnabled;
@property (nonatomic, readonly) BOOL upcEanDeblurEnabled;
@property (nonatomic, readonly) BOOL enableMisshaped1D;
@property (nonatomic, readonly) NSInteger multicodeCachingDuration;
@property (nonatomic, readonly) NSInteger maximumResultsCount;
@property (nonatomic, readonly) NSInteger duplicatesDelayMs;
@property (nonatomic, readonly) BOOL isImageResultEnabled;
@property (nonatomic, readonly) BOOL isCloseSessionOnResultEnabled;
@property (nonatomic, readonly) BOOL isLocationInImageResultEnabled;
- (BOOL)isBarcodeTypeEnabledWithBarcodeType:(BarcodeType)barcodeType SWIFT_WARN_UNUSED_RESULT;
- (void)setBarcodeTypeEnabledWithBarcodeType:(BarcodeType)barcodeType enabled:(BOOL)enabled;
- (void)setBarcodeTypeLengthRangeWithBarcodeType:(BarcodeType)barcodeType minValue:(NSInteger)minValue maxValue:(NSInteger)maxValue;
- (NSArray<NSNumber *> * _Nonnull)getBarcodeTypeLengthRangeWithBarcodeType:(BarcodeType)barcodeType SWIFT_WARN_UNUSED_RESULT;
- (void)configureBarkoderWithBarkoderConfigAsJsonString:(NSString * _Nonnull)barkoderConfigAsJsonString;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface BarkoderView (SWIFT_EXTENSION(BarkoderFrameworkProxy)) <BarkoderResultDelegate>
- (void)scanningFinished:(NSArray<DecoderResult *> * _Nonnull)decoderResults thumbnails:(NSArray<UIImage *> * _Nullable)thumbnails image:(UIImage * _Nullable)image;
@end


SWIFT_CLASS_NAMED("DatamatrixConfig")
@interface DatamatrixConfig : NSObject
@property (nonatomic) BOOL enabled;
@property (nonatomic) NSInteger dpmMode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DecoderPayload")
@interface DecoderPayload : NSObject
@property (nonatomic, copy) NSArray<DecoderResult *> * _Nonnull results;
@property (nonatomic, copy) NSArray<UIImage *> * _Nonnull thumbnails;
@property (nonatomic, copy) NSString * _Nonnull imageInBase64;
@property (nonatomic, copy) NSString * _Nonnull mainImageInBase64;
@property (nonatomic, copy) NSString * _Nonnull documentImageInBase64;
@property (nonatomic, copy) NSString * _Nonnull signatureImageInBase64;
@property (nonatomic, copy) NSString * _Nonnull pictureImageInBase64;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("SymbologyConfig")
@interface SymbologyConfig : NSObject
@property (nonatomic) BOOL enabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
